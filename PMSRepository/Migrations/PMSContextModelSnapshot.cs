// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMSRepository.Context;

namespace PMSRepository.Migrations
{
    [DbContext(typeof(PMSContext))]
    partial class PMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataLayer.Model.UserAccount.AccountPermissions.Permissions", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_permissions");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(124)
                        .HasColumnType("nvarchar(124)");

                    b.HasKey("Id");

                    b.ToTable("tbl_roles");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CredentialId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CredentialId");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_users");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.UserCredential", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("tbl_usersCredential");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.AccountPermissions.Permissions", b =>
                {
                    b.HasOne("DataLayer.Model.UserAccount.User", "User")
                        .WithOne("permissions")
                        .HasForeignKey("DataLayer.Model.UserAccount.AccountPermissions.Permissions", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DataLayer.Model.UserAccount.AccountPermissions.ProjectPermissions", "ProjectPermissions", b1 =>
                        {
                            b1.Property<long>("PermissionsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            b1.Property<bool>("AddMember")
                                .HasColumnType("bit");

                            b1.Property<bool>("AddProject")
                                .HasColumnType("bit");

                            b1.Property<bool>("DeleteProject")
                                .HasColumnType("bit");

                            b1.Property<bool>("RemoveMember")
                                .HasColumnType("bit");

                            b1.HasKey("PermissionsId");

                            b1.ToTable("tbl_permissions");

                            b1.WithOwner()
                                .HasForeignKey("PermissionsId");
                        });

                    b.OwnsOne("DataLayer.Model.UserAccount.AccountPermissions.UserManagementPermissions", "UserManagementPermissions", b1 =>
                        {
                            b1.Property<long>("PermissionsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            b1.Property<bool>("AddUsers")
                                .HasColumnType("bit");

                            b1.Property<bool>("AllUsersVisible")
                                .HasColumnType("bit");

                            b1.Property<bool>("BlockUsers")
                                .HasColumnType("bit");

                            b1.Property<bool>("EditUsers")
                                .HasColumnType("bit");

                            b1.Property<bool>("RemoveUsers")
                                .HasColumnType("bit");

                            b1.HasKey("PermissionsId");

                            b1.ToTable("tbl_permissions");

                            b1.WithOwner()
                                .HasForeignKey("PermissionsId");
                        });

                    b.Navigation("ProjectPermissions");

                    b.Navigation("User");

                    b.Navigation("UserManagementPermissions");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.User", b =>
                {
                    b.HasOne("DataLayer.Model.UserAccount.UserCredential", "Credential")
                        .WithMany("Users")
                        .HasForeignKey("CredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Model.UserAccount.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credential");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.User", b =>
                {
                    b.Navigation("permissions");
                });

            modelBuilder.Entity("DataLayer.Model.UserAccount.UserCredential", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
